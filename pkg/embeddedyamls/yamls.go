/*
SPDX-License-Identifier: Apache-2.0

Copyright Contributors to the Submariner project.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file is auto-generated by yamls2go.go
package embeddedyamls

const (
	Config_rbac_submariner_operator_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-operator
`
	Config_rbac_submariner_operator_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - services/finalizers
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - submariner-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - submariner.io
    resources:
      - '*'
      - servicediscoveries
    verbs:
      - '*'
`
	Config_rbac_submariner_operator_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-operator
subjects:
  - kind: ServiceAccount
    name: submariner-operator
roleRef:
  kind: Role
  name: submariner-operator
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_operator_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-operator
rules:
  # submariner-operator updates the config map of core-dns to forward requests to
  # clusterset.local to Lighthouse DNS, also looks at existing configmaps
  # to figure out network settings
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:  # pods, services and nodes are looked up to figure out network settings
      - ""
    resources:
      - pods
      - services
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - operator.openshift.io
    resources:
      - dnses
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - config.openshift.io
    resources:
      - networks
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
`
	Config_rbac_submariner_operator_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-operator
subjects:
  - kind: ServiceAccount
    name: submariner-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: submariner-operator
`
	Config_rbac_submariner_gateway_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-gateway
`
	Config_rbac_submariner_gateway_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-gateway
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - services/finalizers
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - submariner-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - submariner.io
    resources:
      - '*'
      - servicediscoveries
    verbs:
      - '*'
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - '*'
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
`
	Config_rbac_submariner_gateway_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-gateway
subjects:
  - kind: ServiceAccount
    name: submariner-gateway
roleRef:
  kind: Role
  name: submariner-gateway
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_gateway_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-gateway
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:  # pods and services are looked up to figure out network settings
      - ""
    resources:
      - pods
      - services
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - operator.openshift.io
    resources:
      - dnses
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - config.openshift.io
    resources:
      - networks
    verbs:
      - get
      - list
  - apiGroups:
      - submariner.io
    resources:
      - endpoints
      - gateways
      - clusters
    verbs:
      - get
      - list
      - watch
`
	Config_rbac_submariner_gateway_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-gateway
subjects:
  - kind: ServiceAccount
    name: submariner-gateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: submariner-gateway
`
	Config_rbac_submariner_route_agent_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-routeagent
`
	Config_rbac_submariner_route_agent_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-routeagent
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - services/finalizers
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - submariner-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - submariner.io
    resources:
      - '*'
      - servicediscoveries
    verbs:
      - '*'
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - '*'
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
`
	Config_rbac_submariner_route_agent_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-routeagent
subjects:
  - kind: ServiceAccount
    name: submariner-routeagent
roleRef:
  kind: Role
  name: submariner-routeagent
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_route_agent_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-routeagent
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:  # pods and services are looked up to figure out network settings
      - ""
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - operator.openshift.io
    resources:
      - dnses
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - config.openshift.io
    resources:
      - networks
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    verbs:
      - get
      - list
      - watch
      - update
    resources:
      - nodes
`
	Config_rbac_submariner_route_agent_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-routeagent
subjects:
  - kind: ServiceAccount
    name: submariner-routeagent
roleRef:
  kind: ClusterRole
  name: submariner-routeagent
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_globalnet_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-globalnet
`
	Config_rbac_submariner_globalnet_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-globalnet
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - services/finalizers
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - '*'
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - submariner-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
  - apiGroups:
      - submariner.io
    resources:
      - '*'
      - servicediscoveries
    verbs:
      - '*'
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - '*'
      - serviceexports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
`
	Config_rbac_submariner_globalnet_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-globalnet
subjects:
  - kind: ServiceAccount
    name: submariner-globalnet
roleRef:
  kind: Role
  name: submariner-globalnet
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_globalnet_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-globalnet
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
      - nodes
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - endpoints
      - clusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - clusterglobalegressips
      - globalegressips
      - globalingressips
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - "serviceexports"
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - network.openshift.io
    resources:
      - service/externalips
    verbs:
      - create
      - get
      - list
      - delete
`
	Config_rbac_submariner_globalnet_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-globalnet
subjects:
  - kind: ServiceAccount
    name: submariner-globalnet
roleRef:
  kind: ClusterRole
  name: submariner-globalnet
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_diagnose_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-diagnose
`
	Config_rbac_submariner_diagnose_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: submariner-diagnose
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
      - list
  - apiGroups:
      - submariner.io
    resources:
      - '*'
    verbs:
      - get
      - list
`
	Config_rbac_submariner_diagnose_role_binding_yaml = `---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-diagnose
subjects:
  - kind: ServiceAccount
    name: submariner-diagnose
roleRef:
  kind: Role
  name: submariner-diagnose
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_submariner_diagnose_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: submariner-diagnose
rules:
  # submariner-diagnose runs subctl diagnose to troubleshoot submariner
  # dpeloyment
  - apiGroups:  # nodes are looked up to figure out network settings
      - ""
    resources:
      - configmaps
      - nodes
    verbs:
      - get
      - list
  - apiGroups:  # pods are created to run firewall diagnostics
      - ""
    resources:
      - pods
    verbs:
      - create
      - get
      - list
`
	Config_rbac_submariner_diagnose_cluster_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: submariner-diagnose
subjects:
  - kind: ServiceAccount
    name: submariner-diagnose
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: submariner-diagnose
`
	Config_rbac_lighthouse_agent_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-lighthouse-agent
`
	Config_rbac_lighthouse_agent_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-lighthouse-agent
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
      - endpointslices/restricted
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - submariner.io
    resources:
      - "gateways"
      - "globalingressips"
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - "*"
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
`
	Config_rbac_lighthouse_agent_cluster_role_binding_yaml = `---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-lighthouse-agent
subjects:
  - kind: ServiceAccount
    name: submariner-lighthouse-agent
roleRef:
  kind: ClusterRole
  name: submariner-lighthouse-agent
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_lighthouse_coredns_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-lighthouse-coredns
`
	Config_rbac_lighthouse_coredns_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-lighthouse-coredns
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - namespaces
      - endpoints
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - deletecollection
  - apiGroups:
      - lighthouse.submariner.io
    resources:
      - "*"
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
  - apiGroups:
      - submariner.io
    resources:
      - "gateways"
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - multicluster.x-k8s.io
    resources:
      - "*"
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
`
	Config_rbac_lighthouse_coredns_cluster_role_binding_yaml = `---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-lighthouse-coredns
subjects:
  - kind: ServiceAccount
    name: submariner-lighthouse-coredns
roleRef:
  kind: ClusterRole
  name: submariner-lighthouse-coredns
  apiGroup: rbac.authorization.k8s.io
`
	Config_rbac_networkplugin_syncer_service_account_yaml = `---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: submariner-networkplugin-syncer
`
	Config_rbac_networkplugin_syncer_cluster_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: submariner-networkplugin-syncer
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - submariner.io
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
`
	Config_rbac_networkplugin_syncer_cluster_role_binding_yaml = `---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: submariner-networkplugin-syncer
subjects:
  - kind: ServiceAccount
    name: submariner-networkplugin-syncer
roleRef:
  kind: ClusterRole
  name: submariner-networkplugin-syncer
  apiGroup: rbac.authorization.k8s.io
`
	Config_openshift_rbac_submariner_metrics_reader_role_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: submariner-metrics-reader
  namespace: submariner-operator
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
`
	Config_openshift_rbac_submariner_metrics_reader_role_binding_yaml = `---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-submariner-metrics
subjects:
  - kind: ServiceAccount
    name: prometheus-k8s
    namespace: openshift-monitoring
roleRef:
  kind: Role
  name: submariner-metrics-reader
  apiGroup: rbac.authorization.k8s.io
`
)
