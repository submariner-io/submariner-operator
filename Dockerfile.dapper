FROM ubuntu:16.04
# FROM arm=armhf/ubuntu:16.04

ARG DAPPER_HOST_ARCH
ENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH} DAPPER_ENV=REPO DAPPER_ENV=TAG \
    DAPPER_SOURCE=/go/src/github.com/submariner-io/submariner-operator DAPPER_DOCKER_SOCKET=true \
    TRASH_CACHE=${DAPPER_SOURCE}/.trash-cache HOME=${DAPPER_SOURCE} DAPPER_OUTPUT=output \
    LINT_VERSION=v1.16.0 \
    KIND_VERSION=v0.3.0 \
    KUBEFED_VERSION=0.1.0-rc2 \
    GO_VERSION=1.12.6

RUN rm -f /bin/sh && ln -s /bin/bash /bin/sh

ENV GOLANG_ARCH_amd64=amd64 GOLANG_ARCH_arm=armv6l GOLANG_ARCH=GOLANG_ARCH_${ARCH} \
    GOPATH=/go GO111MODULE=on PATH=/go/bin:/usr/local/go/bin:/root/go/bin:${PATH} SHELL=/bin/bash GOFLAGS=-mod=vendor \
    GOPROXY=https://proxy.golang.org

# Requirements:
# Component      | Usage
# -----------------------------------------------------------
# gcc            | ginkgo
# git            | find the workspace root
# curl           | download other tools
# docker.io      | Dapper
# golang         | build
# kubectl        | e2e tests
# golangci-lint  | code linting
# kubefedctl     | e2e tests
# kind           | e2e tests
# ginkgo         | tests
# goimports      | code formatting
RUN apt-get -q update && \
    apt-get install -y gcc git curl docker.io mercurial make && \
    curl https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${!GOLANG_ARCH}.tar.gz | tar -xzf - -C /usr/local && \
    curl -Lo /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/${ARCH}/kubectl && \
    chmod a+x /usr/bin/kubectl && \
    curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin ${LINT_VERSION} && \
    curl -LO "https://github.com/kubernetes-sigs/kubefed/releases/download/v${KUBEFED_VERSION}/kubefedctl-${KUBEFED_VERSION}-linux-${ARCH}.tgz" && \
    tar -xzf kubefedctl-${KUBEFED_VERSION}-linux-${ARCH}.tgz && cp kubefedctl /usr/bin/ && chmod a+x /usr/bin/kubefedctl && \
    curl -Lo /usr/bin/kind "https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-${ARCH}" && chmod a+x /usr/bin/kind && \
    GOFLAGS="" go get -v github.com/onsi/ginkgo/ginkgo && \
    GOFLAGS="" go get -v golang.org/x/tools/cmd/goimports

# TODO(mangelajo): the operator-sdk install guide recommends go get -d , but that doesn't pull
# the sources where we expect. We need to figure out what's going on and remove the git clone
# hack.
RUN OP_FRAMEWORK="$GOPATH/src/github.com/operator-framework" && \
    mkdir -p $OP_FRAMEWORK && cd $OP_FRAMEWORK && \
    git clone https://github.com/operator-framework/operator-sdk && \
    cd operator-sdk && git checkout 3a85983ecc72bea079973269db429292141d165a  && \
    make tidy && GOFLAGS="" make install

WORKDIR ${DAPPER_SOURCE}

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
