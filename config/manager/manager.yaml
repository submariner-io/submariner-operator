---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: submariner-operator
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: submariner-operator
    app.kubernetes.io/part-of: submariner-operator
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: submariner-operator
  namespace: system
  labels:
    control-plane: submariner-operator
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: submariner-operator
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: submariner-operator
    app.kubernetes.io/part-of: submariner-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: submariner-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: submariner-operator
      labels:
        control-plane: submariner-operator
    spec:
      securityContext:
        runAsNonRoot: true
        # For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # This assumes the project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: false
      serviceAccountName: submariner-operator
      containers:
        - name: submariner-operator
          # Replace this with the built image name
          image: controller:0.0.0
          command:
            - submariner-operator
          # args:
          #  - --enable-leader-election
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "submariner-operator"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          # Configure the resources accordingly based on the project requirements.
          # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            limits:
              cpu: 500m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
